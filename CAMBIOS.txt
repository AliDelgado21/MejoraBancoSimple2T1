using BancoSimple2T1.Data;
using Microsoft.EntityFrameworkCore;
using System;
using System.Windows.Forms;

namespace BancoSimple2T1
{
    public partial class TransaccionesForms : Form
    {
        // Propiedad pública para acceder al monto desde fuera del formulario
        public decimal Monto { get; private set; }

        // Variables privadas para los IDs de las cuentas involucradas
        private readonly int _cuentaOrigenId;
        private readonly int _cuentaDestinoId;

        // Contexto de base de datos (Entity Framework)
        private readonly BancoSimpleContext _dbContext;

        public TransaccionesForms(int cuentaOrigenId, int cuentaDestinoId)
        {
            InitializeComponent();

            // Inicializamos los IDs desde los parámetros
            _cuentaOrigenId = cuentaOrigenId;
            _cuentaDestinoId = cuentaDestinoId;

            // Inicializamos el contexto de base de datos
            _dbContext = new BancoSimpleContext();

            // Cargamos los datos de las cuentas
            CargarInformacionCuentas();
        }

        /// <summary>
        /// Carga la información de las cuentas origen y destino,
        /// y actualiza las etiquetas del formulario.
        /// </summary>
        private void CargarInformacionCuentas()
        {
            try
            {
                var cuentaOrigen = _dbContext.Cuenta
                    .Include(c => c.cliente)
                    .FirstOrDefault(c => c.CuentaId == _cuentaOrigenId);

                var cuentaDestino = _dbContext.Cuenta
                    .Include(c => c.cliente)
                    .FirstOrDefault(c => c.CuentaId == _cuentaDestinoId);

                if (cuentaOrigen == null || cuentaDestino == null)
                {
                    MessageBox.Show("Error al cargar las cuentas.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    Close(); // Cierra el formulario si hay un problema
                    return;
                }

                // Actualizamos las etiquetas con los datos obtenidos
                lblOrigen.Text = $"Nombre: {cuentaOrigen.cliente.Nombre} - Cuenta: {cuentaOrigen.NumeroCuenta}";
                lblDestino.Text = $"Nombre: {cuentaDestino.cliente.Nombre} - Cuenta: {cuentaDestino.NumeroCuenta}";
                lblDisponible.Text = $"Saldo Disponible: {cuentaOrigen.Saldo:C}";
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error al cargar información: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                Close(); // Cerramos el formulario para evitar errores posteriores
            }
        }

        /// <summary>
        /// Evento del botón Aceptar: valida el monto e informa al formulario padre.
        /// </summary>
        private void btnAceptar_Click(object sender, EventArgs e)
        {
            if (decimal.TryParse(txtSaldo.Text, out decimal monto))
            {
                if (monto <= 0)
                {
                    MessageBox.Show("Ingrese un monto mayor a 0", "Monto inválido", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                var cuentaOrigen = _dbContext.Cuenta.Find(_cuentaOrigenId);

                if (cuentaOrigen == null || cuentaOrigen.Saldo < monto)
                {
                    MessageBox.Show("Saldo insuficiente en la cuenta de origen.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                Monto = monto;
                DialogResult = DialogResult.OK;
                Close(); // Cierra el formulario y devuelve resultado
            }
            else
            {
                MessageBox.Show("Ingrese un monto válido", "Error", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        /// <summary>
        /// Evento del botón Cancelar: cierra el formulario sin aplicar cambios.
        /// </summary>
        private void btnCancelar_Click(object sender, EventArgs e)
        {
            DialogResult = DialogResult.Cancel;
            Close(); // Cancela y cierra
        }
    }
}
